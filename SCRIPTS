Linux / MacOS
#!/bin/bash
# Kill all running containers, remove them, then start a new uvicorn container

# Variables
IMAGE_ID="541ba78e6090"
HOST_PORT=7000
CONTAINER_PORT=7000

echo "🛑 Stopping ALL containers..."
docker stop $(docker ps -aq) 2>/dev/null || true

echo "🗑️ Removing ALL containers..."
docker rm $(docker ps -aq) 2>/dev/null || true

echo "🚀 Starting new uvicorn container..."
docker run -d \
  --name uvicorn_app \
  -p $HOST_PORT:$CONTAINER_PORT \
  $IMAGE_ID

echo "📜 Attaching to logs..."
docker logs -f uvicorn_app

Runing Linux container on Windows - PowerShell!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

# === CONFIG ===
$env:TELEGRAM_BOT_TOKEN = "8203351641:AAGRz813XLXXcVk_IM9cl2W02dB5F00ymeU"
$env:TELEGRAM_CHAT_ID   = "819529484"
$DataPath = "$PWD\data"

# Create data dir if missing
if (!(Test-Path $DataPath)) { New-Item -ItemType Directory -Path $DataPath | Out-Null }

# === BUILD IMAGE ===
docker build -t crypto-signaler:latest .

# === STOP OLD CONTAINER ===
docker rm -f uvicorn_app 2>$null

# === RUN NEW CONTAINER ===
docker run -d `
  --name uvicorn_app `
  -p 127.0.0.1:7000:7000 `
  -e TELEGRAM_BOT_TOKEN="$env:TELEGRAM_BOT_TOKEN" `
  -e TELEGRAM_CHAT_ID="$env:TELEGRAM_CHAT_ID" `
  -e SIGNAL_STATE_PATH="/app/data/signal_state.json" `
  --mount type=bind,source="$DataPath",target=/app/data `
  --restart unless-stopped `
  crypto-signaler:latest

# === VERIFY ===
docker ps --filter "name=uvicorn_app"
docker port uvicorn_app
docker exec uvicorn_app sh -lc 'echo $TELEGRAM_BOT_TOKEN; echo $TELEGRAM_CHAT_ID'

# === TEST TELEGRAM PING ===
Invoke-RestMethod -Uri "https://api.telegram.org/bot$env:TELEGRAM_BOT_TOKEN/sendMessage" `
  -Method Post -Body @{ chat_id = $env:TELEGRAM_CHAT_ID; text = "Ping from container ✅" }